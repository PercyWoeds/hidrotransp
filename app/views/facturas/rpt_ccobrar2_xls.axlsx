$LOAD_PATH.unshift "#{File.dirname(__FILE__)}/../lib"

require 'axlsx'

p = Axlsx::Package.new
wb = xlsx_package.workbook
wb.styles do |s|
    date = s.add_style(:format_code => "yyyy-mm-dd", :border => Axlsx::STYLE_THIN_BORDER,:alignment=>{:horizontal => :right},:sz => 8)
    date0 = s.add_style(:format_code => "yyyy-mm-dd",:alignment=>{:horizontal => :right},:sz => 8)
    
    padded = s.add_style(:format_code => "00#", :border => Axlsx::STYLE_THIN_BORDER)
    percent = s.add_style(:format_code => '#.##0.00', :border => Axlsx::STYLE_THIN_BORDER)
    
    title = s.add_style(:bg_color => "ddecfd", :fg_color=>"#FF000000",:border=>Axlsx::STYLE_THIN_BORDER,:alignment=>{:horizontal => :center},:sz => 8)
    title1 = s.add_style(:bg_color => "95c4f9", :fg_color=>"#FF000000",:border=>Axlsx::STYLE_THIN_BORDER,:alignment=>{:horizontal => :center})
    
    cadena =s.add_style(:border=>Axlsx::STYLE_THIN_BORDER,:alignment=>{:horizontal => :left},:sz => 8 )
    cadena0 =s.add_style(:alignment=>{:horizontal => :left},:sz => 8 )  
    currency = wb.styles.add_style(:format_code=>"#,##0.#0;[Red]-#,##0.#0",
                              :border=>Axlsx::STYLE_THIN_BORDER,:sz => 8)
    red_negative = wb.styles.add_style :num_fmt => 8
    comma = wb.styles.add_style :num_fmt => 3
    super_funk = wb.styles.add_style :format_code => '[Green]#'
        
 logo = "LOGOHIDRO2.jpg"

    
    wb.add_worksheet(name: "Pendientes Pago") do |sheet|



     img = File.expand_path("#{Dir.pwd}/public/images/#{logo}")
        sheet.add_image(:image_src => img, :noMove => true) do |image|
            image.width = 300
            image.height = 100
            image.start_at 35, 0 
        end


            sheet.add_row [@company.name],:style =>  [cadena0]
            sheet.add_row [@company.address1 + " "+   @company.address2 + " "+ @company.city + " "+ @company.state],:style =>  [cadena0]
            sheet.add_row [@company.ruc ] ,:style =>  [cadena0]
            sheet.add_row [""]

            lcTexto = "Reporte de Pendientes de pago ." 
            lcTexto2 = "Desde "+ @fecha1.to_s +  " Hasta : "+ @fecha2.to_s

            sheet.add_row ["Lima, " ,Time.now ] , :style =>[cadena0,date0 ]
            sheet.add_row [lcTexto] , :style =>[cadena0  ]
            sheet.add_row [lcTexto2] , :style =>[cadena0  ]
             sheet.add_row [""]

            sheet.merge_cells('A8:C8')
    

    
            sheet.merge_cells('A8:C8')
    
            sheet.column_widths 10   
    
    
    
    sheet.add_row ["Td", "Nro.Documento", "Fec.Emision", "Fec.Vmto", "R.U.C.","Cliente","Moneda", "Soles ","Dolares","Saldo","Vencido" ], :style => title 
    

    valor=0
    @total1 = 0
    @total2 = 0
    @total3 = 0
    
   @facturas_rpt.each do |payment|

    if payment.balance.round(2) > 0.00
     if payment.ruc != nil   
        sheet.add_row [payment.document.descripshort,payment.code,payment.fecha,payment.fecha2,payment.ruc,payment.customer.name,payment.moneda.symbol, payment.get_importe_soles,valor,payment.get_importe_soles_balance,payment.get_vencido], :style => [cadena,cadena,date,date,cadena,cadena,currency,currency,currency,currency,currency,currency,cadena]
    else
        sheet.add_row [payment.document.descripshort, payment.code,payment.fecha,payment.fecha2,payment.customer.ruc,payment.customer.name,payment.moneda.symbol, payment.get_importe_soles,valor,payment.get_importe_soles_balance,payment.get_vencido], :style => [cadena,cadena,date,date,cadena,cadena,currency,currency,currency,currency,currency,currency,cadena]
    end 
    end 

    
    @total1 += payment.get_importe_soles
    @total2 += valor
    @total3 += payment.get_importe_soles_balance
    
   end
   
   sheet.add_row ["","","","","","Totales => ","",@total1,@total2,@total3], :style => [cadena,cadena,date,date,cadena,cadena,cadena,currency,currency,currency,currency,currency]
   
   
end
end 

    
